#In this file i have discuss about data type it is theoritical part but we have discuss each and every data Type with Practical

===========================================Datatypes in Python3==============================================
Datatype          Description                                                 Is Immutable               Example
Int
                We can use to represent the whole/integral numbers            Immutable                  >>> a=10 >>> type(a) <class 'int'>

Float           We can use to represent the decimal/floating point numbers    Immutable                 >>> b=10.5 >>> type(b) class 'float'>

Complex         We can use to represent the complex numbers                   Immutable                 >>> c=10+5j >>> type(c) <class 'complex'> >>> c.real 10.0 >>> c.imag 5.0

Bool            We can use to represent the logical values(Only allowed 
                values are True and False)                                    Immutable                 >>> flag=True >>> flag=False>>> type(flag) <class 'bool'>

Str             To represent sequence of Characters                           Immutable                 >>> s='ruhail' >>> type(s) <class 'str'> >>> s="ruhail"
                                                                                                        >>> s='''Durga Software Solutions ... Ameerpet''' >>> type(s) <class 'str'>
bytes           To represent a sequence of byte values from 0-255             Immutable                 >>> list=[1,2,3,4] >>> b=bytes(list) >>> type(b) <class 'bytes'>

bytearray       To represent a sequence of byte values from 0-255             Mutable                   >>> list=[10,20,30] >>> ba=bytearray(list)  >>> type(ba) <class 'bytearray'>

range           To represent a range of values                                Immutable                 >>> r=range(10) >>> r1=range(0,10) >>> r2=range(0,10,2)

list            To represent an ordered collection of objects                 Mutable                   >>> l=[10,11,12,13,14,15] >>> type(l) <class 'list'>

tuple           To represent an ordered collections of objects                Immutable                 >>> t=(1,2,3,4,5) >>> type(t) <class 'tuple'>

set             To represent an unordered collection of unique objects        Mutable                   >>> s={1,2,3,4,5,6} >>> type(s) <class 'set'>

frozenset       To represent an unordered collection of unique objects        Immutable                 >>> s={11,2,3,'Durga',100,'Ramu'} >>> fs=frozenset(s) >>> type(fs) <class 'frozenset'>

dict            To represent a group of key value pairs                       Mutable                   >>> d={101:'durga',102:'ramu',103:'hari'} >>> type(d) <class 'dict'>



# None Data Type:

None means Nothing or No value associated.
If the value is not available,then to handle such type of cases None introduced. It is something like null value in Java.
Eg:
def m1():
a=10

print(m1()) None



Escape Characters:

In String literals we can use esacpe characters to associate a special meaning.

The following are various important escape characters in Python

\n==>New Line
\t===>Horizontal tab
\r ==>Carriage Return
\b===>Back space
\f===>Form Feed
\v==>Vertical tab
\'===>Single quote
\"===>Double quote
\\===>back slash symbol



Constants:

Constants concept is not applicable in Python.
But it is convention to use only uppercase characters if we donâ€™t want to change value. MAX_VALUE=10
It is just convention but we can change the value.
